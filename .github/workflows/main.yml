name: Golang CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
jobs:

  Clone-down:
    name: Clone down repo
    runs-on: ubuntu-latest
    container: golang:1.21.1-alpine3.18
    steps:
    - uses: actions/checkout@v4
    - name: Upload Repo
      uses: actions/upload-artifact@v3
      with:
        name: code
        path: .
        
  Build:
      runs-on: ubuntu-latest
      needs: Clone-down
      container: golang:1.21.1-alpine3.18
      steps:
      - name: Download code
        uses: actions/download-artifact@v3
        with:
          name: code
          path: .
      - name: Build
        run: |
          cd app/restapi
          go build -gcflags="-N -l" ./cmd/server/server.go
          echo "Server was build successfully."
          go build -gcflags="-N -l" ./cmd/client/client.go
          echo "Client was build successfully."
          go build -gcflags="-N -l" ./cmd/healthchecker/healthchecker.go
          echo "Health checker was build successfully."
      - name: Unit Test
        run: |
          cd app/restapi
          go test ./...
      - name: Stylecheck(golangci-lint)
        run: |
          apk --no-cache add curl
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.55.2
          golangci-lint --version
          docker run --rm -v $(pwd):/app -w /app golangci/golangci-lint:v1.55.2 golangci-lint run -v
      - name: Upload Repo
        uses: actions/upload-artifact@v3
        with:
          name: code
          path: .

  Tests:
      runs-on: ubuntu-latest
      needs: Clone-down
      container: golang:1.21.1-alpine3.18
      steps:
      - name: Download code
        uses: actions/download-artifact@v3
        with:
          name: code
          path: .
      - name: Unit Test
        run: |
          cd app/restapi
          go test ./...

  Stylecheck:
      runs-on: ubuntu-latest
      needs: Clone-down
      container: golang:1.21.1-alpine3.18
      steps:
      - name: Download code
        uses: actions/download-artifact@v3
        with:
          name: code
          path: .
      - name: Run the build process with Docker
        uses: addnab/docker-run-action@v3
        with:
          image: golangci/golangci-lint:v1.55.2
          options: -v $(pwd):/app -w /app
          run: |
            ls
            golangci-lint --version
            golangci-lint run -v
          
  Docker-image:
      runs-on: ubuntu-latest
      needs: ["Build", "Tests", "Stylecheck"]
      permissions:
        packages: write
      steps:
      - name: Download code
        uses: actions/download-artifact@v3
        with:
          name: code
          path: .
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      - name: Build Docker
        run: |
          docker build -t "${{ secrets.DOCKER_HUB_USERNAME }}/migrator:latest" -t "${{ secrets.DOCKER_HUB_USERNAME }}/migrator:1.0-${GIT_COMMIT}" app/migrator/
          docker build -t "${{ secrets.DOCKER_HUB_USERNAME }}/restapi:latest" -t "${{ secrets.DOCKER_HUB_USERNAME }}/restapi:1.0-${GIT_COMMIT}" app/restapi/
      - name: Push Docker
        run: | 
          docker push "${{ secrets.DOCKER_HUB_USERNAME }}/restapi:1.0-${GIT_COMMIT}"
          docker push "${{ secrets.DOCKER_HUB_USERNAME }}/restapi:latest"
          docker push "${{ secrets.DOCKER_HUB_USERNAME }}/migrator:1.0-${GIT_COMMIT}"
          docker push "${{ secrets.DOCKER_HUB_USERNAME }}/migrator:latest" &
          wait
